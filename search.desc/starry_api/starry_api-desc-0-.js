searchState.loadedDescShard("starry_api", 0, "Structure representing epoll_event for user space\nEpoll instance structure\nfd_set structure for select system call\ncheck if a path is mounted\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMount a fatfs device\nWrapper for <code>sockaddr</code>. Using trait to convert between …\nCheck whether the calling process can access the file …\nImplementation of epoll_create system call\nImplementation of epoll_create1 system call\nImplementation of epoll_ctl system call\nImplementation of epoll_pwait system call (simplified …\nImplementation of epoll_wait system call\nCheck whether the calling process can access the file …\nGet file metadata by <code>fd</code> and write into <code>statbuf</code>.\nSynchronize a file’s in-core state with storage device.\nTruncate a file to a specified length.\nThe ioctl() system call manipulates the underlying device …\ncreate a link from new_path to old_path old_path: old file …\nReposition read/write file offset.\nGet the metadata of the symbolic link and write into <code>buf</code>.\nSleep some nanoseconds\nOpen a file by <code>filename</code> and insert it into the file …\nOpen or create a file. fd: file descriptor filename: file …\nImplementation of poll system call\nImplementation of ppoll system call (simplified version …\nRead data from the file indicated by <code>fd</code> at a specific …\nImplementation of pselect6 system call (simplified version …\nWrite data to the file indicated by <code>fd</code> at a specific …\nRead data from the file indicated by <code>fd</code>.\nRead value of a symbolic link\nRead value of a symbolic link\nRead data from the file using a vector of buffers.\nImplementation of select system call\nTo set the clear_child_tid field in the task extended data.\nshmat system call - attach shared memory segment.\nshmctl system call - control shared memory segment.\nshmdt system call - detach shared memory segment.\nshmget system call - get shared memory segment.\nGet the file metadata by <code>path</code> and write into <code>statbuf</code>.\nCreate a symbolic link\nCreate a symbolic link\nSynchronize all file systems.\nremove link of specific file (can be used to delete file) …\nWrite data to the file indicated by <code>fd</code>.\nWrite data to the file using a vector of buffers.\nunmount a fatfs device\nDirectory wrapper for <code>axfs::fops::Directory</code>.\nWrapper struct for the namespace resource [<code>FD_TABLE</code>]\nFile wrapper for <code>axfs::fops::File</code>.\nAdd a file to the file descriptor table.\nClose a file by <code>fd</code>.\nReturn a copy of the inner table.\nDereference the resource automatically, according whether …\nDereference the resource from the given namespace.\nDereference the resource from the global namespace.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a file-like object by <code>fd</code>.\nGet the inner node of the file.\nGet the inner node of the directory.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the last directory entry.\nCreates a new Kstat with specified values, using defaults …\nGet the path of the file.\nGet the path of the directory.\nGet the size of the file\nSynchronize all open files in the file descriptor table.\n一个规范化的文件路径表示\nA global hardlink manager\nA manager for hardlinks\n错误类型\n返回底层路径的字符串切片\n返回此路径组件的迭代器\n创建链接 如果目标路径不存在，则返回 …\n判断此路径是否以给定后缀路径结尾\nWhether the path exists\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n判断是否为目录（以 ‘/’ 结尾）\n判断是否为常规文件（不以 ‘/’ 结尾）\n判断是否为根目录\n将此路径与相对路径组件连接\n返回文件名或目录名组件\n从路径字符串创建一个新的 <code>FilePath</code>…\n返回父目录路径\n移除链接 链接数量为零 或 没有链接时， …\n判断此路径是否以给定前缀路径开头\nAn immutable pointer to user space memory.\nA pointer to user space memory.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the pointer as <code>&amp;str</code>, validating the memory region.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrait to extend <code>SocketAddr</code> and its variants with methods …\nGets the encoded length of the socket address.\nGets the address family of the socket address.\nThis method attempts to interpret the data pointed to by …\nThis method serializes the current socket address instance …\nA helper trait for converting from and to <code>TimeValue</code>.\nConverts from <code>TimeValue</code>.\nConverts to <code>TimeValue</code>.")